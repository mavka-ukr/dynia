взяти "дід"

js """
var $__диня__записати_у_файл__;
var $__диня__читати_з_файлу__;
var $__диня__видалити_файл__;
var $__диня__перевірити_чи_файл_існує__;
var $__диня__прочитати_всі_файли__;
var $__диня__видалити_папку__;
var $__диня__створити_папку__;

await ((async function() {
  var { default: fs } = await import('fs');

  $__диня__записати_у_файл__ = mavka_diia(
    '__диня__записати_у_файл__',
    {
      'шлях': mavka_param(0, 'шлях', $текст, undefined),
      'значення': mavka_param(1, 'значення', $текст, undefined)
    },
    function(args, di) {
      var path = mavka_arg(args, 0, 'шлях', $текст, undefined, di);
      var value = mavka_arg(args, 1, 'значення', $текст, undefined, di);
      var pathParts = path.split('/');
      var folderPath = pathParts.slice(0, pathParts.length - 1).join('/');
      if (!fs.existsSync(folderPath)) {
        fs.mkdirSync(folderPath, { recursive: true });
      }
      fs.writeFileSync(path, value);
      return null;
    }
  );

  $__диня__читати_з_файлу__ = mavka_diia(
    '__диня__читати_з_файлу__',
    {
      'шлях': mavka_param(0, 'шлях', $текст, undefined)
    },
    function(args, di) {
      var path = mavka_arg(args, 0, 'шлях', $текст, undefined, di);
      return fs.readFileSync(path, 'utf8');
    }
  );

  $__диня__видалити_файл__ = mavka_diia(
    '__диня__видалити_файл__',
    {
      'шлях': mavka_param(0, 'шлях', $текст, undefined)
    },
    function(args, di) {
      var path = mavka_arg(args, 0, 'шлях', $текст, undefined, di);
      fs.unlinkSync(path);
      return null;
    }
  );

  $__диня__перевірити_чи_файл_існує__ = mavka_diia(
    '__диня__перевірити_чи_файл_існує__',
    {
      'шлях': mavka_param(0, 'шлях', $текст, undefined)
    },
    function(args, di) {
      var path = mavka_arg(args, 0, 'шлях', $текст, undefined, di);
      return fs.existsSync(path);
    }
  );

  $__диня__прочитати_всі_файли__ = mavka_diia(
    '__диня__прочитати_всі_файли__',
    {
      'шлях': mavka_param(0, 'шлях', $текст, undefined)
    },
    function(args, di) {
      var path = mavka_arg(args, 0, 'шлях', $текст, undefined, di);
      var files = fs.readdirSync(path);
      var result = [];
      for (var i = 0; i < files.length; i++) {
        var file = files[i];
        var filePath = path + '/' + file;
        var fileContent = fs.readFileSync(filePath, 'utf8');
        result.push(fileContent);
      }
      return result;
    }
  );

    $__диня__видалити_папку__ = mavka_diia(
      '__диня__видалити_папку__',
      {
        'шлях': mavka_param(0, 'шлях', $текст, undefined)
      },
      function(args, di) {
        var path = mavka_arg(args, 0, 'шлях', $текст, undefined, di);
        if (fs.existsSync(path)) {
          fs.rmdirSync(path, { recursive: true });
        }
        return null;
      }
    );

    $__диня__створити_папку__ = mavka_diia(
      '__диня__створити_папку__',
      {
        'шлях': mavka_param(0, 'шлях', $текст, undefined)
      },
      function(args, di) {
        var path = mavka_arg(args, 0, 'шлях', $текст, undefined, di);
        fs.mkdirSync(path, { recursive: true });
        return null;
      }
    );
})());
"""
макет дія __диня__записати_у_файл__(шлях текст, значення текст) ніщо
макет дія __диня__читати_з_файлу__(шлях текст) текст
макет дія __диня__видалити_файл__(шлях текст) ніщо
макет дія __диня__перевірити_чи_файл_існує__(шлях текст) логічний
макет дія __диня__прочитати_всі_файли__(шлях текст) список
макет дія __диня__видалити_папку__(шлях текст) ніщо
макет дія __диня__створити_папку__(шлях текст) ніщо

структура ПомилкаДині є Помилка
кінець

ПД_1 = ПомилкаДині("ПД-1: щоб покласти значення, необхідно вказати місце")
ПД_2 = ПомилкаДині("ПД-2: щоб отримати значення, необхідно вказати місце")
ПД_3 = ПомилкаДині("ПД-3: щоб видалити значення, необхідно вказати місце")
ПД_4 = (місце): ПомилкаДині("""ПД-4: обʼєкт на місці "%(місце)" вже існує""")
ПД_5 = (місце): ПомилкаДині("""ПД-5: обʼєкт на місці "%(місце)" не існує""")

структура Диня
  шлях текст = "~/.данідині/спільне"
  тип щось = словник

  ;; покласти(значення щось, місце текст або список або пусто = пусто) ніщо
  ;; додати(значення щось, місце текст або список або пусто = пусто) ніщо
  ;; змінити(значення щось, місце текст або список або пусто = пусто) ніщо
  ;; отримати(місце щось) щось
  ;; отримати_все() список
  ;; видалити(місце щось) ніщо
  ;; видалити_все() ніщо
  ;; перевірити(місце щось) логічне
кінець

дія Диня.покласти(значення щось, місце щось або пусто = пусто) ніщо
  якщо місце є пусто
    якщо значення містить "місце"
      місце = значення.місце
    інакше
      впасти ПД_1
    кінець
  кінець
  якщо місце є список
    місце = місце.зʼєднати("/")
  кінець
  якщо місце не є текст
    місце = текст(місце)
  кінець
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  шлях = шлях + "/" + місце + ".дід"
  сирі_дані = дід.зібрати(значення)
  __диня__записати_у_файл__(шлях, сирі_дані)
кінець

дія Диня.додати(значення щось, місце щось або пусто = пусто) ніщо
  якщо місце є пусто
    якщо значення містить "місце"
      місце = значення.місце
    інакше
      впасти ПД_1
    кінець
  кінець
  якщо місце є список
    місце = місце.зʼєднати("/")
  кінець
  якщо місце не є текст
    місце = текст(місце)
  кінець
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  шлях = шлях + "/" + місце + ".дід"
  сирі_дані = дід.зібрати(значення)
  якщо __диня__перевірити_чи_файл_існує__(шлях)
    впасти ПД_4(місце)
  кінець
  __диня__записати_у_файл__(шлях, сирі_дані)
кінець

дія Диня.змінити(значення щось, місце щось або пусто = пусто) ніщо
  якщо місце є пусто
    якщо значення містить "місце"
      місце = значення.місце
    інакше
      впасти ПД_1
    кінець
  кінець
  якщо місце є список
    місце = місце.зʼєднати("/")
  кінець
  якщо місце не є текст
    місце = текст(місце)
  кінець
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  шлях = шлях + "/" + місце + ".дід"
  сирі_дані = дід.зібрати(значення)
  якщо !__диня__перевірити_чи_файл_існує__(шлях)
    впасти ПД_5(місце)
  кінець
  __диня__записати_у_файл__(шлях, сирі_дані)
кінець

дія Диня.отримати(місце щось або пусто = пусто) щось
  якщо місце є пусто
    впасти ПД_2
  кінець
  якщо місце є список
    місце = місце.зʼєднати("/")
  кінець
  якщо місце не є текст
    місце = текст(місце)
  кінець
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  шлях = шлях + "/" + місце + ".дід"
  якщо !__диня__перевірити_чи_файл_існує__(шлях)
    вернути пусто
  кінець
  сирі_дані = __диня__читати_з_файлу__(шлях)
  якщо сирі_дані є пусто
    вернути пусто
  кінець
  вернути дід.розібрати(сирі_дані)
кінець

дія Диня.отримати_все() список
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  файли = __диня__прочитати_всі_файли__(шлях)
  результат = []
  перебрати файли як файл
    результат.додати(дід.розібрати(файл))
  кінець
  вернути результат
кінець

дія Диня.видалити(місце щось або пусто = пусто) ніщо
  якщо місце є пусто
    впасти ПД_3
  кінець
  якщо місце є список
    місце = місце.зʼєднати("/")
  кінець
  якщо місце не є текст
    місце = текст(місце)
  кінець
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  шлях = шлях + "/" + місце + ".дід"
  якщо !__диня__перевірити_чи_файл_існує__(шлях)
    вернути пусто
  кінець
  __диня__видалити_файл__(шлях)
кінець

дія Диня.видалити_все() ніщо
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  __диня__видалити_папку__(шлях)
  __диня__створити_папку__(шлях)
кінець

дія Диня.перевірити(місце щось або пусто = пусто) логічне
  якщо місце є пусто
    впасти ПД_2
  кінець
  якщо місце є список
    місце = місце.зʼєднати("/")
  кінець
  якщо місце не є текст
    місце = текст(місце)
  кінець
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  шлях = шлях + "/" + місце + ".дід"
  вернути __диня__перевірити_чи_файл_існує__(шлях)
кінець

дати Диня
