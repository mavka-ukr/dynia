js "
const mavka = getMavka()
const context = getContext()
const { default: fs } = await import('fs');
const existingFolders = [];

context.set('__диня__отримати_назву_структури__', mavka.makeProxyFunction(([value]) => {
  return mavka.toCell(value.name);
}));

context.set('__диня__записати_у_файл__', mavka.makeWrappedProxyFunction(([path, value]) => {
  const pathParts = path.split('/');
  const folderPath = pathParts.slice(0, pathParts.length - 1).join('/');
  if (!existingFolders.includes(folderPath)) {
    if (!fs.existsSync(folderPath)) {
      fs.mkdirSync(folderPath, { recursive: true });
    }
  }
  fs.writeFileSync(path, value);
}));

context.set('__диня__читати_з_файлу__', mavka.makeWrappedProxyFunction(([path], context) => {
  return fs.readFileSync(path, 'utf8');
}));

context.set('__диня__видалити_файл__', mavka.makeWrappedProxyFunction(([path]) => {
  fs.unlinkSync(path);
}));

context.set('__диня__перевірити_чи_існує__', mavka.makeWrappedProxyFunction(([path]) => {
  return fs.existsSync(path);
}));
"

модуль диня
  ПД_1 = "ПД-1: щоб покласти значення, необхідно вказати місце"
  ПД_2 = "ПД-2: щоб отримати значення, необхідно вказати місце"
  ПД_3 = "ПД-3: щоб видалити значення, необхідно вказати місце"

  структура Диня
    адреса текст = "~/.данідині"
    тип щось = словник

    покласти(значення щось, місце щось) ніщо
    отримати(місце щось) щось
    видалити(місце щось) ніщо
  кінець

  дія Диня.покласти(значення щось, місце щось або пусто = пусто) ніщо
    якщо місце є пусто
      якщо значення містить "місце"
        місце = значення.місце
      інакше
        впасти ПД_1
      кінець
    кінець
    якщо місце є список
      місце = місце.зʼєднати("/")
    кінець
    адреса = я.адреса
    якщо адреса.закінчується_на("/")
      адреса = адреса.зрізати(0, адреса.довжина() - 1)
    кінець
    шлях = адреса + "/" + __диня__отримати_назву_структури__(я.тип) + "/" + місце + ".дід"
    сирі_дані = Дід.зібрати(значення)
    __диня__записати_у_файл__(шлях, сирі_дані)
  кінець

  дія Диня.отримати(місце щось або пусто = пусто) щось
    якщо місце є пусто
      впасти ПД_2
    кінець
    якщо місце є список
      місце = місце.зʼєднати("/")
    кінець
    адреса = я.адреса
    якщо адреса.закінчується_на("/")
      адреса = адреса.зрізати(0, адреса.довжина() - 1)
    кінець
    шлях = адреса + "/" + __диня__отримати_назву_структури__(я.тип) + "/" + місце + ".дід"
    якщо !__диня__перевірити_чи_існує__(шлях)
      вернути пусто
    кінець
    сирі_дані = __диня__читати_з_файлу__(шлях)
    якщо сирі_дані є пусто
      вернути пусто
    кінець
    вернути Дід.розібрати(сирі_дані)
  кінець

  дія Диня.видалити(місце щось або пусто = пусто) ніщо
    якщо місце є пусто
      впасти ПД_3
    кінець
    якщо місце є список
      місце = місце.зʼєднати("/")
    кінець
    адреса = я.адреса
    якщо адреса.закінчується_на("/")
      адреса = адреса.зрізати(0, адреса.довжина() - 1)
    кінець
    шлях = адреса + "/" + __диня__отримати_назву_структури__(я.тип) + "/" + місце + ".дід"
    якщо !__диня__перевірити_чи_існує__(шлях)
      вернути пусто
    кінець
    __диня__видалити_файл__(шлях)
  кінець

  дати Диня
кінець

дати диня
