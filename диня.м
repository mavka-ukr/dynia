взяти "дід"

js """
var $__диня__записати_у_файл__;
var $__диня__читати_з_файлу__;
var $__диня__видалити_файл__;
var $__диня__перевірити_чи_файл_існує__;

await ((async function() {
  var { default: fs } = await import('fs');

  $__диня__записати_у_файл__ = (p, di) => {
    var path = mavka_param(p, 0, 'шлях', undefined, $текст, di);
    var value = mavka_param(p, 1, 'значення', undefined, $текст, di);
    var pathParts = path.split('/');
    var folderPath = pathParts.slice(0, pathParts.length - 1).join('/');
    if (!fs.existsSync(folderPath)) {
      fs.mkdirSync(folderPath, { recursive: true });
    }
    fs.writeFileSync(path, value);
    return null;
  }
  $__диня__записати_у_файл__.__m_name__ = '__диня__записати_у_файл__';

  $__диня__читати_з_файлу__ = (p, di) => {
    var path = mavka_param(p, 0, 'шлях', undefined, $текст, di);
    return fs.readFileSync(path, 'utf8');
  }
  $__диня__читати_з_файлу__.__m_name__ = '__диня__читати_з_файлу__';

  $__диня__видалити_файл__ = (p, di) => {
    var path = mavka_param(p, 0, 'шлях', undefined, $текст, di);
    fs.unlinkSync(path);
    return null;
  }
  $__диня__видалити_файл__.__m_name__ = '__диня__видалити_файл__';

  $__диня__перевірити_чи_файл_існує__ = (p, di) => {
    var path = mavka_param(p, 0, 'шлях', undefined, $текст, di);
    return fs.existsSync(path);
  }
  $__диня__перевірити_чи_файл_існує__.__m_name__ = '__диня__перевірити_чи_файл_існує__';
})());
"""
макет дія __диня__записати_у_файл__(шлях текст, значення текст) ніщо
макет дія __диня__читати_з_файлу__(шлях текст) текст
макет дія __диня__видалити_файл__(шлях текст) ніщо
макет дія __диня__перевірити_чи_файл_існує__(шлях текст) логічний

ПД_1 = "ПД-1: щоб покласти значення, необхідно вказати місце"
ПД_2 = "ПД-2: щоб отримати значення, необхідно вказати місце"
ПД_3 = "ПД-3: щоб видалити значення, необхідно вказати місце"

структура Диня
  шлях текст = "~/.данідині/спільне"
  тип щось = словник

  ;; покласти(значення щось, місце текст або список) ніщо
  ;; отримати(місце щось) щось
  ;; видалити(місце щось) ніщо
кінець

дія Диня.покласти(значення щось, місце щось або пусто = пусто) ніщо
  якщо місце є пусто
    якщо значення містить "місце"
      місце = значення.місце
    інакше
      впасти ПД_1
    кінець
  кінець
  якщо місце є список
    місце = місце.зʼєднати("/")
  кінець
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  шлях = шлях + "/" + місце + ".дід"
  сирі_дані = дід.зібрати(значення)
  __диня__записати_у_файл__(шлях, сирі_дані)
кінець

дія Диня.отримати(місце щось або пусто = пусто) щось
  якщо місце є пусто
    впасти ПД_2
  кінець
  якщо місце є список
    місце = місце.зʼєднати("/")
  кінець
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  шлях = шлях + "/" + місце + ".дід"
  якщо !__диня__перевірити_чи_файл_існує__(шлях)
    вернути пусто
  кінець
  сирі_дані = __диня__читати_з_файлу__(шлях)
  якщо сирі_дані є пусто
    вернути пусто
  кінець
  вернути дід.розібрати(сирі_дані)
кінець

дія Диня.видалити(місце щось або пусто = пусто) ніщо
  якщо місце є пусто
    впасти ПД_3
  кінець
  якщо місце є список
    місце = місце.зʼєднати("/")
  кінець
  шлях = я.шлях
  якщо шлях.закінчується_на("/")
    шлях = шлях.зрізати(0, шлях.довжина - 1)
  кінець
  шлях = шлях + "/" + місце + ".дід"
  якщо !__диня__перевірити_чи_файл_існує__(шлях)
    вернути пусто
  кінець
  __диня__видалити_файл__(шлях)
кінець

дати Диня
